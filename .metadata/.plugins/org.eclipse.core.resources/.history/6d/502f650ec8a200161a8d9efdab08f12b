package controllers;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;


import entity.ReservationAll;
import entity.Table;
import entity.TableAll;

public class TableController {
	public static TableAll TableRecords;
	
	public TableController(){
		TableRecords = new TableAll(5,5,10,10);
	}
	
	public void run(){
		System.out.println("Syncing tables with reservations list");
		syncTablesWithReservations();
		/*for(int i=0;i<TableRecords.getTotalNumOfTables();i++){
			TableRecords.getAllTheTables().get(i).displayTable();
		}*/
		
	}
	
	public void syncTablesWithReservations(){
		Date today = new GregorianCalendar().getTime();
		DateFormat df = new SimpleDateFormat("dd-MM-yyyy");
		String todayString = df.format(today);
		System.out.println("Date today:" + todayString);
		ReservationAll rL = ReservationController.allTheReservations;
		ArrayList<Integer> reservedTablesAM = rL.reservedTablesOnDate(todayString, "AM");
		ArrayList<Integer> reservedTablesPM = rL.reservedTablesOnDate(todayString, "PM");
		for(int i=0;i<TableRecords.getTotalNumOfTables();i++){
			if(reservedTablesAM.contains(TableRecords.getAllTheTables().get(i).getTableNumber())){
				Table temp = TableRecords.getAllTheTables().get(i);
				temp.setIsReservedAM(true);
			}
			if(reservedTablesPM.contains(TableRecords.getAllTheTables().get(i).getTableNumber())){
				Table temp = TableRecords.getAllTheTables().get(i);
				temp.setIsReservedPM(true);
			}
		}
	}
}
